name: Front-end Web CI/CD

on:
  push:
    branches:
      - actions-test
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 21

      - name: Install dependencies
        run: npm install

      - name: Build application
        if: github.ref == 'refs/heads/main'
        run: npm run build

      - name: Build application
        if: github.ref == 'refs/heads/actions-test'
        run: npm run build

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
    
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 21-alpine
      
      - name: Install dependencies
        run: npm install
      
      - name: Test application
        run: npm test

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Install OpenVPN Client
        run: sudo apt-get update && sudo apt-get install openvpn

      - name: Download VPN Configuration
        run: |
          wget https://infotuto.univ-lille.fr/fileadmin/user_upload/infotuto/images/DSI/Fichiers_telechargeables/Clients_VPN/ULILLE_VPN_ETUDIANT_Linux_v4.zip
          unzip ULILLE_VPN_ETUDIANT_Linux_v4.zip

      - name: OpenVPN-Connect
        uses: kota65535/github-openvpn-connect-action@v2.1.0
        with:
          config_file: ULILLE_VPN_ETU_TCP_v4_Linux.ovpn
          username: ${{ secrets.VPN_USERNAME }}
          password: ${{ secrets.VPN_PASSWORD }}

      - name: Configure KUBECONFIG
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir ${HOME}/.kube
          echo ${{ secrets.KUBE_CONFIG_PROD }} | base64 --decode > ${HOME}/.kube/config
          cat ${HOME}/.kube/config
      
      - name: Configure KUBECONFIG
        if: github.ref == 'refs/heads/actions-test'
        run: |
          mkdir ${HOME}/.kube
          echo ${{ secrets.KUBE_CONFIG_DEV }} | base64 --decode > ${HOME}/.kube/config
          cat ${HOME}/.kube/config
    
      - name: Cat KUBECONFIG
        run: cat ${HOME}/.kube/config
      
      - name: Build Docker Image
        run: docker build --file ./Dockerfile -t nextechsolutions/shoploc:front-end .

      - name: Push Docker Image to Registry
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push nextechsolutions/shoploc:front-end

      - name: Deploy Kubernetes
        if: github.ref == 'refs/heads/actions-test'
        run: kubectl apply --kubeconfig ${HOME}/.kube/config -f kubernetes/dev-deployment.yaml
